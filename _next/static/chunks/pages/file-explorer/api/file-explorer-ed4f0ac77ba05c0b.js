(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7939],{73355:function(e,t,i){var n={"./file-explorer.json":95881};function webpackContext(e){return i(webpackContextResolve(e))}function webpackContextResolve(e){if(!i.o(n,e)){var t=Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n[e]}webpackContext.keys=function(){return Object.keys(n)},webpackContext.resolve=webpackContextResolve,e.exports=webpackContext,webpackContext.id=73355},29965:function(e,t,i){"use strict";i.r(t),i.d(t,{default:function(){return Page}}),i(92379);var n=i(78928),o=i(33757),s=JSON.parse('{"props":{"apiRef":{"type":{"name":"shape","description":"{ current?: { focusItem: func, getItem: func, getItemDOMElement: func, gridEnabled: func, selectItem: func, setColumns: func, setItemExpansion: func, setVisibleOrder: func } }"}},"checkboxSelection":{"type":{"name":"bool"},"default":"false"},"classes":{"type":{"name":"object"},"additionalInfo":{"cssApi":true}},"defaultExpandedItems":{"type":{"name":"arrayOf","description":"Array&lt;string&gt;"},"default":"[]"},"defaultSelectedItems":{"type":{"name":"any"},"default":"[]"},"disabledItemsFocusable":{"type":{"name":"bool"},"default":"false"},"disableSelection":{"type":{"name":"bool"},"default":"false"},"expandedItems":{"type":{"name":"arrayOf","description":"Array&lt;string&gt;"}},"expansionTrigger":{"type":{"name":"enum","description":"\'content\'<br>&#124;&nbsp;\'iconContainer\'"},"default":"\'content\'"},"experimentalFeatures":{"type":{"name":"shape","description":"{ indentationAtItemLevel?: bool }"}},"getItemId":{"type":{"name":"func"},"default":"(item) => item.id","signature":{"type":"function(item: R) => string","describedArgs":["item"],"returned":"string"}},"getItemLabel":{"type":{"name":"func"},"default":"(item) => item.label","signature":{"type":"function(item: R) => string","describedArgs":["item"],"returned":"string"}},"id":{"type":{"name":"string"}},"isItemDisabled":{"type":{"name":"func"},"signature":{"type":"function(item: R) => boolean","describedArgs":["item"],"returned":"boolean"}},"itemChildrenIndentation":{"type":{"name":"union","description":"number<br>&#124;&nbsp;string"},"default":"12px"},"multiSelect":{"type":{"name":"bool"},"default":"false"},"onExpandedItemsChange":{"type":{"name":"func"},"signature":{"type":"function(event: React.SyntheticEvent, itemIds: array) => void","describedArgs":["event","itemIds"]}},"onItemExpansionToggle":{"type":{"name":"func"},"signature":{"type":"function(event: React.SyntheticEvent, itemId: array, isExpanded: array) => void","describedArgs":["event","itemId","isExpanded"]}},"onItemFocus":{"type":{"name":"func"},"signature":{"type":"function(event: React.SyntheticEvent, itemId: string, value: string) => void","describedArgs":["event","itemId","value"]}},"onItemSelectionToggle":{"type":{"name":"func"},"signature":{"type":"function(event: React.SyntheticEvent, itemId: array, isSelected: array) => void","describedArgs":["event","itemId","isSelected"]}},"onSelectedItemsChange":{"type":{"name":"func"},"signature":{"type":"function(event: React.SyntheticEvent, itemIds: Array<string> | string) => void","describedArgs":["event","itemIds"]}},"selectedItems":{"type":{"name":"any"}},"slotProps":{"type":{"name":"object"},"default":"{}"},"slots":{"type":{"name":"object"},"default":"{}","additionalInfo":{"slotsApi":true}},"sx":{"type":{"name":"union","description":"Array&lt;func<br>&#124;&nbsp;object<br>&#124;&nbsp;bool&gt;<br>&#124;&nbsp;func<br>&#124;&nbsp;object"},"additionalInfo":{"sx":true}}},"name":"FileExplorer","imports":["import { FileExplorer } from \'@stoked-ui/sui-file-explorer/FileExplorer\';","import { FileExplorer } from \'@stoked-ui/sui-file-explorer\';"],"slots":[{"name":"root","description":"Element rendered at the root.","default":"FileExplorerRoot","class":"MuiFileExplorer-root"},{"name":"item","description":"Custom component for the item.","default":"CCV F ileExplorerItem.","class":null},{"name":"collapseIcon","description":"The default icon used to collapse the item.","class":null},{"name":"expandIcon","description":"The default icon used to expand the item.","class":null},{"name":"endIcon","description":"The default icon displayed next to an end item.\\nThis is applied to all fileExplorer items and can be overridden by the File `icon` slot prop.","class":null}],"classes":[],"spread":true,"themeDefaultProps":true,"muiName":"MuiFileExplorer","forwardsRefTo":"HTMLUListElement","filename":"/packages/sui-file-explorer/src/FileExplorer/FileExplorer.tsx","inheritance":null,"demos":"<ul><li><a href=\\"/file-explorer/docs/file-customizaton/\\">File Customization</a></li>\\n<li><a href=\\"/file-explorer/docs/file-explorer/customization/\\">File Explorer - Customization</a></li>\\n<li><a href=\\"/file-explorer/docs/file-explorer/drag-and-drop/\\">File Explorer - Drag and Drop</a></li>\\n<li><a href=\\"/file-explorer/docs/file-explorer/expansion/\\">File Explorer - Expansion</a></li>\\n<li><a href=\\"/file-explorer/docs/file-explorer/focus/\\">File Explorer - Focus</a></li>\\n<li><a href=\\"/file-explorer/docs/file-explorer/items/\\">File Explorer - Items</a></li>\\n<li><a href=\\"/file-explorer/docs/file-explorer/selection/\\">File Explorer - Selection</a></li>\\n<li><a href=\\"/file-explorer/docs/getting-started/\\">Getting Started</a></li></ul>","cssComponent":false}'),r=i(651);function Page(e){var t=e.descriptions,i=e.pageContent;return(0,r.jsx)(n.Z,{descriptions:t,pageContent:i})}Page.getInitialProps=function(){var e=i(73355);return{descriptions:(0,o.Z)(e),pageContent:s}}},8230:function(e,t,i){(window.__NEXT_P=window.__NEXT_P||[]).push(["/file-explorer/api/file-explorer",function(){return i(29965)}])},95881:function(e){"use strict";e.exports=JSON.parse('{"componentDescription":"","propDescriptions":{"apiRef":{"description":"The ref object that allows FileExplorer View manipulation. Can be instantiated with <code>useFileExplorerApiRef()</code>."},"checkboxSelection":{"description":"If <code>true</code>, the fileExplorer view renders a checkbox at the left of its label that allows selecting it."},"classes":{"description":"Override or extend the styles applied to the component."},"defaultExpandedItems":{"description":"Expanded item ids. Used when the item&#39;s expansion is not controlled."},"defaultSelectedItems":{"description":"Selected item ids. (Uncontrolled) When <code>multiSelect</code> is true this takes an array of strings; when false (default) a string."},"disabledItemsFocusable":{"description":"If <code>true</code>, will allow focus on disabled items."},"disableSelection":{"description":"If <code>true</code> selection is disabled."},"expandedItems":{"description":"Expanded item ids. Used when the item&#39;s expansion is controlled."},"expansionTrigger":{"description":"The slot that triggers the item&#39;s expansion when clicked."},"experimentalFeatures":{"description":"Unstable features, breaking changes might be introduced. For each feature, if the flag is not explicitly set to <code>true</code>, the feature will be fully disabled and any property / method call will not have any effect."},"getItemId":{"description":"Used to determine the id of a given item.","typeDescriptions":{"item":"The item to check.","string":"The id of the item."}},"getItemLabel":{"description":"Used to determine the string label for a given item.","typeDescriptions":{"item":"The item to check.","string":"The label of the item."}},"id":{"description":"This prop is used to help implement the accessibility logic. If you don&#39;t provide this prop. It falls back to a randomly generated id."},"isItemDisabled":{"description":"Used to determine if a given item should be disabled.","typeDescriptions":{"item":"The item to check.","boolean":"<code>true</code> if the item should be disabled."}},"itemChildrenIndentation":{"description":"Horizontal indentation between an item and its children. Examples: 24, &quot;24px&quot;, &quot;2rem&quot;, &quot;2em&quot;."},"multiSelect":{"description":"If <code>true</code>, <code>ctrl</code> and <code>shift</code> will trigger multiselect."},"onExpandedItemsChange":{"description":"Callback fired when fileExplorer items are expanded/collapsed.","typeDescriptions":{"event":"The event source of the callback.","itemIds":"The ids of the expanded items."}},"onItemExpansionToggle":{"description":"Callback fired when a fileExplorer item is expanded or collapsed.","typeDescriptions":{"event":"The event source of the callback.","itemId":"The itemId of the modified item.","isExpanded":"<code>true</code> if the item has just been expanded, <code>false</code> if it has just been collapsed."}},"onItemFocus":{"description":"Callback fired when fileExplorer items are focused.","typeDescriptions":{"event":"The event source of the callback <strong>Warning</strong>: This is a generic event not a focus event.","itemId":"The id of the focused item.","value":"of the focused item."}},"onItemSelectionToggle":{"description":"Callback fired when a fileExplorer item is selected or deselected.","typeDescriptions":{"event":"The event source of the callback.","itemId":"The itemId of the modified item.","isSelected":"<code>true</code> if the item has just been selected, <code>false</code> if it has just been deselected."}},"onSelectedItemsChange":{"description":"Callback fired when fileExplorer items are selected/deselected.","typeDescriptions":{"event":"The event source of the callback","itemIds":"The ids of the selected items. When <code>multiSelect</code> is <code>true</code>, this is an array of strings; when false (default) a string."}},"selectedItems":{"description":"Selected item ids. (Controlled) When <code>multiSelect</code> is true this takes an array of strings; when false (default) a string."},"slotProps":{"description":"The props used for each component slot."},"slots":{"description":"Overridable component slots."},"sx":{"description":"The system prop that allows defining system overrides as well as additional CSS styles."}},"classDescriptions":{},"slotDescriptions":{"collapseIcon":"The default icon used to collapse the item.","endIcon":"The default icon displayed next to an end item. This is applied to all fileExplorer items and can be overridden by the File <code>icon</code> slot prop.","expandIcon":"The default icon used to expand the item.","item":"Custom component for the item.","root":"Element rendered at the root."}}')}},function(e){e.O(0,[9774,9477,6221,3976,5386,3989,7809,7900,7146,5093,8997,2031,536,373,7066,7651,5599,3552,4059,8928,9705,2888,179],function(){return e(e.s=8230)}),_N_E=e.O()}]);