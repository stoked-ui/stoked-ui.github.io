(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8194],{43831:function(n,s,a){"use strict";var t=a(31576);s.Z=void 0;var e=t(a(96491)),o=a(651);s.Z=(0,e.default)((0,o.jsx)("path",{d:"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2M9.29 16.29 5.7 12.7a.9959.9959 0 0 1 0-1.41c.39-.39 1.02-.39 1.41 0L10 14.17l6.88-6.88c.39-.39 1.02-.39 1.41 0 .39.39.39 1.02 0 1.41l-7.59 7.59c-.38.39-1.02.39-1.41 0"}),"CheckCircleRounded")},43223:function(n,s,a){"use strict";var t=a(31576);s.Z=void 0;var e=t(a(96491)),o=a(651);s.Z=(0,e.default)((0,o.jsx)("path",{d:"M14.71 6.71a.9959.9959 0 0 0-1.41 0L8.71 11.3c-.39.39-.39 1.02 0 1.41l4.59 4.59c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L10.83 12l3.88-3.88c.39-.39.38-1.03 0-1.41"}),"ChevronLeftRounded")},37794:function(n,s,a){"use strict";var t=a(31576);s.Z=void 0;var e=t(a(96491)),o=a(651);s.Z=(0,e.default)((0,o.jsx)("path",{d:"M12 9c1.65 0 3 1.35 3 3s-1.35 3-3 3-3-1.35-3-3 1.35-3 3-3m0-2c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5M2 13h2c.55 0 1-.45 1-1s-.45-1-1-1H2c-.55 0-1 .45-1 1s.45 1 1 1m18 0h2c.55 0 1-.45 1-1s-.45-1-1-1h-2c-.55 0-1 .45-1 1s.45 1 1 1M11 2v2c0 .55.45 1 1 1s1-.45 1-1V2c0-.55-.45-1-1-1s-1 .45-1 1m0 18v2c0 .55.45 1 1 1s1-.45 1-1v-2c0-.55-.45-1-1-1s-1 .45-1 1M5.99 4.58c-.39-.39-1.03-.39-1.41 0-.39.39-.39 1.03 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0s.39-1.03 0-1.41zm12.37 12.37c-.39-.39-1.03-.39-1.41 0-.39.39-.39 1.03 0 1.41l1.06 1.06c.39.39 1.03.39 1.41 0 .39-.39.39-1.03 0-1.41zm1.06-10.96c.39-.39.39-1.03 0-1.41-.39-.39-1.03-.39-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0zM7.05 18.36c.39-.39.39-1.03 0-1.41-.39-.39-1.03-.39-1.41 0l-1.06 1.06c-.39.39-.39 1.03 0 1.41s1.03.39 1.41 0z"}),"LightModeOutlined")},260:function(n,s,a){"use strict";var t=a(31576);s.Z=void 0;var e=t(a(96491)),o=a(651);s.Z=(0,e.default)([(0,o.jsx)("circle",{cx:"6.18",cy:"17.82",r:"2.18"},"0"),(0,o.jsx)("path",{d:"M4 4.44v2.83c7.03 0 12.73 5.7 12.73 12.73h2.83c0-8.59-6.97-15.56-15.56-15.56m0 5.66v2.83c3.9 0 7.07 3.17 7.07 7.07h2.83c0-5.47-4.43-9.9-9.9-9.9"},"1")],"RssFeed")},86693:function(n,s,a){"use strict";var t=a(31576);s.Z=void 0,function(n,s){if((s||!n||!n.__esModule)&&null!==n&&("object"==typeof n||"function"==typeof n)){var a=_getRequireWildcardCache(s);if(a&&a.has(n))return a.get(n);var t={__proto__:null},e=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in n)if("default"!==o&&Object.prototype.hasOwnProperty.call(n,o)){var p=e?Object.getOwnPropertyDescriptor(n,o):null;p&&(p.get||p.set)?Object.defineProperty(t,o,p):t[o]=n[o]}t.default=n,a&&a.set(n,t)}}(a(92379));var e=t(a(96491)),o=a(651);function _getRequireWildcardCache(n){if("function"!=typeof WeakMap)return null;var s=new WeakMap,a=new WeakMap;return(_getRequireWildcardCache=function(n){return n?a:s})(n)}s.Z=(0,e.default)((0,o.jsx)("path",{d:"M10 15l5.19-3L10 9v6m11.56-7.83c.13.47.22 1.1.28 1.9.07.8.1 1.49.1 2.09L22 12c0 2.19-.16 3.8-.44 4.83-.25.9-.83 1.48-1.73 1.73-.47.13-1.33.22-2.65.28-1.3.07-2.49.1-3.59.1L12 19c-4.19 0-6.8-.16-7.83-.44-.9-.25-1.48-.83-1.73-1.73-.13-.47-.22-1.1-.28-1.9-.07-.8-.1-1.49-.1-2.09L2 12c0-2.19.16-3.8.44-4.83.25-.9.83-1.48 1.73-1.73.47-.13 1.33-.22 2.65-.28 1.3-.07 2.49-.1 3.59-.1L12 5c4.19 0 6.8.16 7.83.44.9.25 1.48.83 1.73 1.73z"}),"YouTube")},57957:function(n,s,a){"use strict";a.d(s,{Z:function(){return b}});var t=a(94458),e=a(187),o=a(92379),p=a(53048),c=a(62534),l=a(5652),r=a(64376),i=a(87842),u=a(651),d=(0,i.Z)((0,u.jsx)("path",{d:"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"}),"Person"),k=a(52386),h=a(75613);let m=["alt","children","className","component","slots","slotProps","imgProps","sizes","src","srcSet","variant"],useUtilityClasses=n=>{let{classes:s,variant:a,colorDefault:t}=n;return(0,c.Z)({root:["root",a,t&&"colorDefault"],img:["img"],fallback:["fallback"]},k.$,s)},y=(0,l.ZP)("div",{name:"MuiAvatar",slot:"Root",overridesResolver:(n,s)=>{let{ownerState:a}=n;return[s.root,s[a.variant],a.colorDefault&&s.colorDefault]}})(({theme:n})=>({position:"relative",display:"flex",alignItems:"center",justifyContent:"center",flexShrink:0,width:40,height:40,fontFamily:n.typography.fontFamily,fontSize:n.typography.pxToRem(20),lineHeight:1,borderRadius:"50%",overflow:"hidden",userSelect:"none",variants:[{props:{variant:"rounded"},style:{borderRadius:(n.vars||n).shape.borderRadius}},{props:{variant:"square"},style:{borderRadius:0}},{props:{colorDefault:!0},style:(0,e.Z)({color:(n.vars||n).palette.background.default},n.vars?{backgroundColor:n.vars.palette.Avatar.defaultBg}:(0,e.Z)({backgroundColor:n.palette.grey[400]},n.applyStyles("dark",{backgroundColor:n.palette.grey[600]})))}]})),g=(0,l.ZP)("img",{name:"MuiAvatar",slot:"Img",overridesResolver:(n,s)=>s.img})({width:"100%",height:"100%",textAlign:"center",objectFit:"cover",color:"transparent",textIndent:1e4}),v=(0,l.ZP)(d,{name:"MuiAvatar",slot:"Fallback",overridesResolver:(n,s)=>s.fallback})({width:"75%",height:"75%"}),f=o.forwardRef(function(n,s){let a=(0,r.i)({props:n,name:"MuiAvatar"}),{alt:c,children:l,className:i,component:d="div",slots:k={},slotProps:f={},imgProps:b,sizes:x,src:w,srcSet:C,variant:M="circular"}=a,Z=(0,t.Z)(a,m),P=null,T=function({crossOrigin:n,referrerPolicy:s,src:a,srcSet:t}){let[e,p]=o.useState(!1);return o.useEffect(()=>{if(!a&&!t)return;p(!1);let e=!0,o=new Image;return o.onload=()=>{e&&p("loaded")},o.onerror=()=>{e&&p("error")},o.crossOrigin=n,o.referrerPolicy=s,o.src=a,t&&(o.srcset=t),()=>{e=!1}},[n,s,a,t]),e}((0,e.Z)({},b,{src:w,srcSet:C})),j=w||C,S=j&&"error"!==T,I=(0,e.Z)({},a,{colorDefault:!S,component:d,variant:M}),A=useUtilityClasses(I),[R,z]=(0,h.Z)("img",{className:A.img,elementType:g,externalForwardedProps:{slots:k,slotProps:{img:(0,e.Z)({},b,f.img)}},additionalProps:{alt:c,src:w,srcSet:C,sizes:x},ownerState:I});return P=S?(0,u.jsx)(R,(0,e.Z)({},z)):l||0===l?l:j&&c?c[0]:(0,u.jsx)(v,{ownerState:I,className:A.fallback}),(0,u.jsx)(y,(0,e.Z)({as:d,ownerState:I,className:(0,p.default)(A.root,i),ref:s},Z,{children:P}))});var b=f},52386:function(n,s,a){"use strict";a.d(s,{$:function(){return getAvatarUtilityClass}});var t=a(62234),e=a(48809);function getAvatarUtilityClass(n){return(0,e.ZP)("MuiAvatar",n)}let o=(0,t.Z)("MuiAvatar",["root","colorDefault","circular","rounded","square","img","fallback"]);s.Z=o},56641:function(n,s,a){"use strict";a.r(s),a.d(s,{default:function(){return Page}}),a(92379);var t,e=a(78627),o={en:{description:"We're excited to introduce callback support for global theme overrides in this minor version update!",location:"/docs/pages/blog/mui/callback-support-in-style-overrides.md",rendered:['<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="error-icon" viewBox="0 0 20 20">\n      <path fill-rule="evenodd" d="M2 7.4v5.2a2 2 0 0 0 .586 1.414l3.4 3.4A2 2 0 0 0 7.4 18h5.2a2 2 0 0 0 1.414-.586l3.4-3.4A2 2 0 0 0 18 12.6V7.4a2 2 0 0 0-.586-1.414l-3.4-3.4A2 2 0 0 0 12.6 2H7.4a2 2 0 0 0-1.414.586l-3.4 3.4A2 2 0 0 0 2 7.4Zm11.03-.43a.75.75 0 0 1 0 1.06L11.06 10l1.97 1.97a.75.75 0 1 1-1.06 1.06L10 11.06l-1.97 1.97a.75.75 0 0 1-1.06-1.06L8.94 10 6.97 8.03a.75.75 0 0 1 1.06-1.06L10 8.94l1.97-1.97a.75.75 0 0 1 1.06 0Z" clip-rule="evenodd"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="warning-icon" viewBox="0 0 20 20">\n      <path d="M2.33 17a.735.735 0 0 1-.665-.375.631.631 0 0 1-.094-.375.898.898 0 0 1 .115-.396L9.353 3.062a.621.621 0 0 1 .281-.27.85.85 0 0 1 .729 0 .622.622 0 0 1 .281.27l7.667 12.792c.07.125.108.257.114.396a.63.63 0 0 1-.093.375.842.842 0 0 1-.271.27.728.728 0 0 1-.394.105H2.33Zm7.664-2.5c.211 0 .39-.072.536-.214a.714.714 0 0 0 .218-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.531-.22.736.736 0 0 0-.536.215.714.714 0 0 0-.219.531c0 .212.072.39.215.536.143.146.32.219.531.219Zm0-2.5c.211 0 .39-.072.536-.216a.72.72 0 0 0 .218-.534v-2.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.531-.216.734.734 0 0 0-.536.216.72.72 0 0 0-.219.534v2.5c0 .212.072.39.215.534a.72.72 0 0 0 .531.216Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="success-icon" viewBox="0 0 20 20">\n      <path d="m8.938 10.875-1.25-1.23a.718.718 0 0 0-.521-.228.718.718 0 0 0-.521.229.73.73 0 0 0 0 1.062l1.77 1.771c.153.153.327.23.521.23a.718.718 0 0 0 .521-.23l3.896-3.896a.73.73 0 0 0 0-1.062.718.718 0 0 0-.52-.23.718.718 0 0 0-.521.23l-3.376 3.354ZM10 18a7.796 7.796 0 0 1-3.104-.625 8.065 8.065 0 0 1-2.552-1.719 8.064 8.064 0 0 1-1.719-2.552A7.797 7.797 0 0 1 2 10c0-1.111.208-2.15.625-3.115a8.064 8.064 0 0 1 4.27-4.26A7.797 7.797 0 0 1 10 2c1.111 0 2.15.208 3.115.625a8.096 8.096 0 0 1 4.26 4.26C17.792 7.851 18 8.89 18 10a7.797 7.797 0 0 1-.625 3.104 8.066 8.066 0 0 1-4.26 4.271A7.774 7.774 0 0 1 10 18Z"/>\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="info-icon" viewBox="0 0 20 20">\n      <path d="M9.996 14c.21 0 .39-.072.535-.216a.72.72 0 0 0 .219-.534v-3.5a.728.728 0 0 0-.214-.534.72.72 0 0 0-.532-.216.734.734 0 0 0-.535.216.72.72 0 0 0-.219.534v3.5c0 .213.071.39.214.534a.72.72 0 0 0 .532.216Zm0-6.5c.21 0 .39-.071.535-.214a.714.714 0 0 0 .219-.532.736.736 0 0 0-.214-.535.714.714 0 0 0-.532-.219.736.736 0 0 0-.535.214.714.714 0 0 0-.219.532c0 .21.071.39.214.535.143.146.32.219.532.219Zm.01 10.5a7.81 7.81 0 0 1-3.11-.625 8.065 8.065 0 0 1-2.552-1.719 8.066 8.066 0 0 1-1.719-2.551A7.818 7.818 0 0 1 2 9.99c0-1.104.208-2.14.625-3.105a8.066 8.066 0 0 1 4.27-4.26A7.818 7.818 0 0 1 10.009 2a7.75 7.75 0 0 1 3.106.625 8.083 8.083 0 0 1 4.26 4.265A7.77 7.77 0 0 1 18 9.994a7.81 7.81 0 0 1-.625 3.11 8.066 8.066 0 0 1-1.719 2.552 8.083 8.083 0 0 1-2.546 1.719 7.77 7.77 0 0 1-3.104.625Z"/>\n      </symbol>\n      </svg>','\n      <svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copied-icon" viewBox="0 0 24 24">\n        <path d="M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.24 11.28L9.69 11.2c-.38-.39-.38-1.01 0-1.4.39-.39 1.02-.39 1.41 0l1.36 1.37 4.42-4.46c.39-.39 1.02-.39 1.41 0 .38.39.38 1.01 0 1.4l-5.13 5.17c-.37.4-1.01.4-1.4 0zM3 6c-.55 0-1 .45-1 1v13c0 1.1.9 2 2 2h13c.55 0 1-.45 1-1s-.45-1-1-1H5c-.55 0-1-.45-1-1V7c0-.55-.45-1-1-1z" />\n      </symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="copy-icon" viewBox="0 0 24 24">\n      <path d="M15 20H5V7c0-.55-.45-1-1-1s-1 .45-1 1v13c0 1.1.9 2 2 2h10c.55 0 1-.45 1-1s-.45-1-1-1zm5-4V4c0-1.1-.9-2-2-2H9c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h9c1.1 0 2-.9 2-2zm-2 0H9V4h9v12z" />\n      +</symbol>\n      </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n        <symbol id="anchor-link-icon" viewBox="0 0 12 6">\n          <path d="M8.9176 0.083252H7.1676C6.84677 0.083252 6.58427 0.345752 6.58427 0.666585C6.58427 0.987419 6.84677 1.24992 7.1676 1.24992H8.9176C9.8801 1.24992 10.6676 2.03742 10.6676 2.99992C10.6676 3.96242 9.8801 4.74992 8.9176 4.74992H7.1676C6.84677 4.74992 6.58427 5.01242 6.58427 5.33325C6.58427 5.65409 6.84677 5.91659 7.1676 5.91659H8.9176C10.5276 5.91659 11.8343 4.60992 11.8343 2.99992C11.8343 1.38992 10.5276 0.083252 8.9176 0.083252ZM3.6676 2.99992C3.6676 3.32075 3.9301 3.58325 4.25094 3.58325H7.75094C8.07177 3.58325 8.33427 3.32075 8.33427 2.99992C8.33427 2.67909 8.07177 2.41659 7.75094 2.41659H4.25094C3.9301 2.41659 3.6676 2.67909 3.6676 2.99992ZM4.83427 4.74992H3.08427C2.12177 4.74992 1.33427 3.96242 1.33427 2.99992C1.33427 2.03742 2.12177 1.24992 3.08427 1.24992H4.83427C5.1551 1.24992 5.4176 0.987419 5.4176 0.666585C5.4176 0.345752 5.1551 0.083252 4.83427 0.083252H3.08427C1.47427 0.083252 0.167603 1.38992 0.167603 2.99992C0.167603 4.60992 1.47427 5.91659 3.08427 5.91659H4.83427C5.1551 5.91659 5.4176 5.65409 5.4176 5.33325C5.4176 5.01242 5.1551 4.74992 4.83427 4.74992Z" />\n        </symbol>\n    </svg>','<svg style="display: none;" xmlns="http://www.w3.org/2000/svg">\n      <symbol id="comment-link-icon" viewBox="0 0 24 24">\n      <path d="M22.8481 4C22.8481 2.9 21.9481 2 20.8481 2H4.84814C3.74814 2 2.84814 2.9 2.84814 4V16C2.84814 17.1 3.74814 18 4.84814 18H18.8481L22.8481 22V4ZM16.8481 11H13.8481V14C13.8481 14.55 13.3981 15 12.8481 15C12.2981 15 11.8481 14.55 11.8481 14V11H8.84814C8.29814 11 7.84814 10.55 7.84814 10C7.84814 9.45 8.29814 9 8.84814 9H11.8481V6C11.8481 5.45 12.2981 5 12.8481 5C13.3981 5 13.8481 5.45 13.8481 6V9H16.8481C17.3981 9 17.8481 9.45 17.8481 10C17.8481 10.55 17.3981 11 16.8481 11Z" />\n      </symbol>\n      </svg>','<p><span class="x x-first x-last"><a href="https://github.com/mui/material-ui/releases/tag/v5.3.0"></span>Material\xa0UI v5.3.0</a> introduces the ability to write a callback in style overrides (global theming), giving you full control of component customization at the theme level.</p>\n<p>Why is using a callback better than the existing plain object? Let me explain from the beginning<span class="x x-first x-last">…</span></p>\n<h2 id="the-problems">The problems<a aria-labelledby="the-problems" class="anchor-link" href="#the-problems" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="the-problems"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>In v4, the style engine library was JSS which had some limitations.\nStyle overrides were not able to support dynamic props via a callback so we relied on using classes. Take a look at the <a href="https://github.com/mui/material-ui/blob/97d32b0ff3fae4537c20c79e619f132f4a5c5cbb/packages/mui-material/src/Chip/chipClasses.ts"><code>Chip</code> classes</a> for example – there are more than 20 classes that are incomplete if we count the permutation of elements (<code>root | avatar | icon | label | deleteIcon</code>), size (<code>small | medium | large</code>), and color (<code>primary | secondary | ...</code>).\nThis leads to a poor theming experience because developers need to know which specific key to customize.</p>\n<p>We believe it would be better for developers if they could create custom styles by reading the component props, without ever needing to know what key they should use.</p>\n<p>Fortunately, it is now possible in v5 because of the new style engine powered by emotion. Theming is simpler and more flexible. You only need to know the component&#39;s slot name and then provide an <strong>object</strong> (static overrides) or a <strong>callback</strong> (dynamic overrides).</p>\n<h2 id="using-callback-in-styleoverrides">Using callback in <code>styleOverrides</code><a aria-labelledby="using-callback-in-styleoverrides" class="anchor-link" href="#using-callback-in-styleoverrides" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="using-callback-in-styleoverrides"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>The callback gives you the <code>props</code> that the slot received. Most of the time you would use:</p>\n<ul>\n<li><code>props.ownerState</code>: the combination of runtime props and internal states.</li>\n<li><code>props.theme</code>: the theme object you provided to <code>ThemeProvider</code>, or the default one.</li>\n</ul>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> ThemeProvider<span class="token punctuation">,</span> createTheme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token operator">&lt;</span>ThemeProvider\n  theme<span class="token operator">=</span><span class="token punctuation">{</span><span class="token function">createTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">MuiChip</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">styleOverrides</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token comment">// you can now use the theme without creating the initial theme!</span>\n          <span class="token function-variable function">root</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> ownerState<span class="token punctuation">,</span> theme <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n            <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n              <span class="token literal-property property">small</span><span class="token operator">:</span> <span class="token string">\'8px 4px\'</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">medium</span><span class="token operator">:</span> <span class="token string">\'12px 6px\'</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">large</span><span class="token operator">:</span> <span class="token string">\'16px 8px\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">[</span>ownerState<span class="token punctuation">.</span>size<span class="token punctuation">]</span><span class="token punctuation">,</span>\n            <span class="token operator">...</span><span class="token punctuation">(</span>ownerState<span class="token punctuation">.</span>variant <span class="token operator">===</span> <span class="token string">\'outlined\'</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">{</span>\n              <span class="token literal-property property">borderWidth</span><span class="token operator">:</span> <span class="token string">\'2px\'</span><span class="token punctuation">,</span>\n              <span class="token operator">...</span><span class="token punctuation">(</span>ownerState<span class="token punctuation">.</span>variant <span class="token operator">===</span> <span class="token string">\'primary\'</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">{</span>\n                <span class="token literal-property property">borderColor</span><span class="token operator">:</span> theme<span class="token punctuation">.</span>palette<span class="token punctuation">.</span>primary<span class="token punctuation">.</span>light<span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n<span class="token operator">></span>\n  <span class="token operator">...</span>your app\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ThemeProvider</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<blockquote>\n<p>\uD83D\uDCA1 The side benefit of using a callback is that you can use the runtime theme without creating the outer scoped variable.</p>\n</blockquote>\n<h3 id="typescript">TypeScript<a aria-labelledby="typescript" class="anchor-link" href="#typescript" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="typescript"><svg><use xlink:href="#comment-link-icon" /></svg></button></h3><p>The callback is type-safe.</p>\n<ul>\n<li><code>ownerState</code>: <code>ComponentProps</code> interface, for example <code>ButtonProps</code>, <code>ChipProps</code>, etc.</li>\n<li><code>theme</code>: <code>Theme</code> interface from <code>@mui/material/styles</code>.</li>\n</ul>\n<div class="MuiCode-root"><pre><code class="language-tsx"><span class="token punctuation">{</span>\n  MuiChip<span class="token operator">:</span> <span class="token punctuation">{</span>\n    styleOverrides<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token comment">// ownerState: ChipProps</span>\n      <span class="token comment">// theme: Theme</span>\n      <span class="token function-variable function">root</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> ownerState<span class="token punctuation">,</span> theme <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token operator">...</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>If you extend the interface via module augmentation like this:</p>\n<div class="MuiCode-root"><pre><code class="language-ts">declare module <span class="token string">\'@mui/material/Button\'</span> <span class="token punctuation">{</span>\n  <span class="token keyword">interface</span> <span class="token class-name">ButtonPropsVariantOverrides</span> <span class="token punctuation">{</span>\n    dashed<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>you will be able to see those props in <code>ownerState.variant</code> \uD83C\uDF89. <code>theme</code> can be augmented as well.</p>\n<h2 id="experimental-sx-function">Experimental <code>sx</code> function<a aria-labelledby="experimental-sx-function" class="anchor-link" href="#experimental-sx-function" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="experimental-sx-function"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><p>Initially, <code>sx</code> was designed to be a prop that enables you to inject styles with a shorthand notation to components created with the <code>styled</code> API:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> styled <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/styles\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Box <span class="token keyword">from</span> <span class="token string">\'@mui/material/Box\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> Label <span class="token operator">=</span> <span class="token function">styled</span><span class="token punctuation">(</span><span class="token string">\'span\'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token literal-property property">fontWeight</span><span class="token operator">:</span> <span class="token string">\'bold\'</span><span class="token punctuation">,</span>\n  <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token string">\'0.875rem\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Box</span></span> <span class="token attr-name">sx</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">display</span><span class="token operator">:</span> <span class="token string">\'flex\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Label</span></span> <span class="token attr-name">sx</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">\'text.secondary\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span>Label<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Label</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Box</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<aside class="MuiCallout-root MuiCallout-info">\n            <svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon">\n<use class="MuiCode-copied-icon" xlink:href="#info-icon" />\n</svg>\n            <div class="MuiCallout-content">\n            <p>All Material\xa0UI and Joy\xa0UI components are created with the <code>styled</code> API, so they accept <code>sx</code> prop by default.</p>\n\n</div></aside><p><code>sx</code> helps developers write less code and be more productive once they are familiar with the API. With the callback support in <code>styleOverrides</code>, it is now possible to use an <code>sx</code>-like syntax in global theme overrides.</p>\n<p>All you need is to use the <a href="/system/styled/#how-can-i-use-the-sx-syntax-with-the-styled-utility"><code>unstable_sx</code></a> function from the <code>theme</code>. In the following example, the <code>sx</code> is used to style the <code>Chip</code> component:</p>\n<div class="MuiCode-root"><pre><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> ThemeProvider<span class="token punctuation">,</span> createTheme <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'@mui/material/styles\'</span><span class="token punctuation">;</span>\n\n<span class="token operator">&lt;</span>ThemeProvider\n  theme<span class="token operator">=</span><span class="token punctuation">{</span><span class="token function">createTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">MuiChip</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token literal-property property">styleOverrides</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n          <span class="token function-variable function">root</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> theme <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span>\n            theme<span class="token punctuation">.</span><span class="token function">unstable_sx</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n              <span class="token literal-property property">px</span><span class="token operator">:</span> <span class="token string">\'12px\'</span><span class="token punctuation">,</span> <span class="token comment">// shorthand for padding-left &amp; right</span>\n              <span class="token literal-property property">py</span><span class="token operator">:</span> <span class="token string">\'6px\'</span><span class="token punctuation">,</span> <span class="token comment">// shorthand for padding-top &amp; bottom</span>\n              <span class="token literal-property property">fontWeight</span><span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span>\n              <span class="token literal-property property">borderRadius</span><span class="token operator">:</span> <span class="token string">\'8px\'</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>\n<span class="token operator">></span>\n  <span class="token operator">...</span>your app\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ThemeProvider</span></span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<p>If I want to add more styles based on these conditions:</p>\n<ul>\n<li>border color <code>palette.text.secondary</code> is applied when <code>&lt;Chip variant=&quot;outlined&quot; /&gt;</code>.</li>\n<li>font size is <code>0.875rem</code> in mobile viewport, <code>0.75rem</code> in larger than mobile viewport when <code>&lt;Chip size=&quot;small&quot; /&gt;</code>.</li>\n</ul>\n<p>An array can be used as a return type to make the code easier to add/remove conditions:</p>\n<div class="MuiCode-root"><pre><code class="language-js"><span class="token comment">// The &lt;ThemeProvider> is omitted for readability.</span>\n<span class="token punctuation">{</span>\n  <span class="token function-variable function">root</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> ownerState<span class="token punctuation">,</span> theme <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">[</span>\n    theme<span class="token punctuation">.</span><span class="token function">unstable_sx</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      <span class="token literal-property property">px</span><span class="token operator">:</span> <span class="token string">\'12px\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">py</span><span class="token operator">:</span> <span class="token string">\'6px\'</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">fontWeight</span><span class="token operator">:</span> <span class="token number">500</span><span class="token punctuation">,</span>\n      <span class="token literal-property property">borderRadius</span><span class="token operator">:</span> <span class="token string">\'8px\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    ownerState<span class="token punctuation">.</span>variant <span class="token operator">===</span> <span class="token string">\'outlined\'</span> <span class="token operator">&amp;&amp;</span> ownerState<span class="token punctuation">.</span>color <span class="token operator">===</span> <span class="token string">\'default\'</span> <span class="token operator">&amp;&amp;</span>\n      theme<span class="token punctuation">.</span><span class="token function">unstable_sx</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">borderColor</span><span class="token operator">:</span> <span class="token string">\'text.secondary\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    ownerState<span class="token punctuation">.</span>size <span class="token operator">===</span> <span class="token string">\'small\'</span> <span class="token operator">&amp;&amp;</span>\n      theme<span class="token punctuation">.</span><span class="token function">unstable_sx</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">xs</span><span class="token operator">:</span> <span class="token string">\'0.875rem\'</span><span class="token punctuation">,</span> <span class="token literal-property property">sm</span><span class="token operator">:</span> <span class="token string">\'0.75rem\'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre><button data-ga-event-category="code" data-ga-event-action="copy-click" aria-label="Copy the code" class="MuiCode-copy"><svg focusable="false" aria-hidden="true" viewBox="0 0 24 24" data-testid="ContentCopyRoundedIcon"><use class="MuiCode-copy-icon" xlink:href="#copy-icon" /><use class="MuiCode-copied-icon" xlink:href="#copied-icon" /></svg><span class="MuiCode-copyKeypress"><span>(or</span> $keyC<span>)</span></span></button></div>\n<hr />\n\n<p><strong>That&#39;s it for today!</strong> Happy styling \uD83D\uDC85.</p>\n<p>I hope this small update makes your customization experience better than ever. Don&#39;t forget to share this update with your friends and colleagues.</p>\n<p>To get more updates like this in the future, <strong>subscribe to our newsletter</strong> at the bottom of this page.</p>\n<h2 id="read-more">Read more<a aria-labelledby="read-more" class="anchor-link" href="#read-more" tabindex="-1"><svg><use xlink:href="#anchor-link-icon" /></svg></a><button title="Post a comment" class="comment-link" data-feedback-hash="read-more"><svg><use xlink:href="#comment-link-icon" /></svg></button></h2><ul>\n<li><a href="/material-ui/customization/theme-components/">Component theming</a></li>\n<li><a href="/system/getting-started/the-sx-prop/#theme-aware-properties">All supported shorthands in <code>sx</code></a></li>\n<li><a href="/system/getting-started/usage/#performance-tradeoffs"><code>sx</code> performance tradeoff</a></li>\n<li><a href="/system/styled/#difference-with-the-sx-prop"><code>sx</code> with <code>styled</code></a></li>\n</ul>\n'],toc:[{text:"The problems",level:2,hash:"the-problems",children:[]},{text:"Using callback in styleOverrides",level:2,hash:"using-callback-in-styleoverrides",children:[{text:"TypeScript",level:3,hash:"typescript"}]},{text:"Experimental sx function",level:2,hash:"experimental-sx-function",children:[]},{text:"Read more",level:2,hash:"read-more",children:[]}],title:"Introducing callback support in style overrides",headers:{title:"Introducing callback support in style overrides",description:"We're excited to introduce callback support for global theme overrides in this minor version update!",date:"2022-01-31T00:00:00.000Z",authors:["siriwatknp"],tags:["Material UI","Product"],manualCard:"true",components:[],hooks:[]}}},p=a(651);function Page(){return t||(t=(0,p.jsx)(e.Z,{docs:o}))}},14365:function(n,s,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/blog/mui/callback-support-in-style-overrides",function(){return a(56641)}])}},function(n){n.O(0,[9774,9477,6221,3976,5386,3989,7809,7900,7146,5093,8997,2031,536,373,7066,2208,9738,947,5843,2376,634,2697,3133,8633,3552,5418,8627,2888,179],function(){return n(n.s=14365)}),_N_E=n.O()}]);